<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ragtag.boardhub.repository.GameMapper">

    <select id="getList" resultType="Games">
        select * from games
    </select>

    <select id="getListWithSort" resultType="Games">
        select * from games m join cate_mapping c on m.game_id = c.game_id where category_id = #{category}
    </select>

    <select id="findGameById" resultType="Games">
        select * from games where game_id = #{game_id}
    </select>

    <update id="updateGame">
        update games
        <trim prefix="set" suffixOverrides=",">
            <if test="title != null">title = #{title},</if>
            <if test="org_title != null">org_title = #{org_title},</if>
            <if test="thumbnail != null">thumbnail = #{thumbnail},</if>
            <if test="image != null">image = #{image},</if>
            <if test="release_date > 0">release_date = #{release_date},</if>
            <if test="min_player > 0">min_player = #{min_player},</if>
            <if test="max_player > 0">max_player = #{max_player},</if>
            <if test="playing_time > 0">playing_time = #{playing_time},</if>
            <if test="min_age > 0">min_age = #{min_age}</if>
        </trim>
        where game_id = #{game_id}
    </update>

    <insert id="insertGame">
        <selectKey resultType="long" keyProperty="game_id" order="BEFORE">
            select games_seq.nextval from dual
        </selectKey>
        insert into games(game_id, title, org_title, thumbnail, image, release_date, min_player, max_player, playing_time, min_age)
        values(#{game_id}, #{title}, #{org_title}, #{thumbnail}, #{image}, #{release_date}, #{min_player}, #{max_player}, #{playing_time}, #{min_age})
    </insert>

    <select id="getCategoryList" resultType="Categories">
        select * from categories
    </select>

    <select id="getMechanicList" resultType="Mechanics">
        select * from mechanics
    </select>

    <select id="getDesignerList" resultType="Designers">
        select * from designers
    </select>

    <select id="getArtistList" resultType="Artists">
        select * from artists
    </select>

    <select id="getPublisherList" resultType="Publishers">
        select * from publishers
    </select>

    <select id="getCategoriesByGameId" resultType="Categories">
        select * from categories c join cate_mapping m on c.category_id = m.category_id where m.game_id = #{game_id}
    </select>

    <select id="getMechanicsByGameId" resultType="Mechanics">
        select * from mechanics c join mech_mapping m on c.mechanic_id = m.mechanic_id where m.game_id = #{game_id}
    </select>

    <select id="getArtistsByGameId" resultType="Artists">
        select * from artists a join arti_mapping m on a.artist_id = m.artist_id where m.game_id = #{game_id}
    </select>

    <select id="getDesignersByGameId" resultType="Designers">
        select * from designers d join designer_mapping m on d.designer_id = m.designer_id where m.game_id = #{game_id}
    </select>

    <select id="getPublishersByGameId" resultType="Publishers">
        select * from publishers p join publish_mapping m on p.publisher_id = m.publisher_id where m.game_id = #{game_id}
    </select>

    <select id="checkCatMapping">
        select count(*) from cate_mapping
        where category_id = #{categoryId} and game_id = #{gameId}
    </select>

    <insert id="addCatMapping">
        insert into cate_mapping(category_id, game_id)
        values(#{categoryId}, #{gameId})
    </insert>

    <select id="checkMechMapping">
        select count(*) from mech_mapping
        where mechanic_id = #{mechanicId} and game_id = #{gameId}
    </select>

    <insert id="addMechMapping">
        insert into mech_mapping(mechanic_id, game_id)
        values(#{mechanicId}, #{gameId})
    </insert>

    <select id="checkDesMapping">
        select count(*) from designer_mapping
        where designer_id = #{designerId} and game_id = #{gameId}
    </select>

    <insert id="addDesMapping">
        insert into designer_mapping(designer_id, game_id)
        values(#{designerId}, #{gameId})
    </insert>

    <select id="checkArtiMapping">
        select count(*) from arti_mapping
        where artist_id = #{artistId} and game_id = #{gameId}
    </select>

    <insert id="addArtiMapping">
        insert into arti_mapping(artist_id, game_id)
        values(#{artistId}, #{gameId})
    </insert>

    <select id="checkPubMapping">
        select count(*) from publish_mapping
        where publisher_id = #{publisherId} and game_id = #{gameId}
    </select>

    <insert id="addPubMapping">
        insert into publish_mapping(publisher_id, game_id)
        values(#{publisherId}, #{gameId})
    </insert>

    <insert id="saveGameComment">
        <selectKey order="BEFORE" resultType="long" keyProperty="comment_id"> 
            select comments_seq.nextval from dual
        </selectKey>
        insert into comments(comment_id, game_id, user_id, content)
        values(#{comment_id}, #{game_id}, #{user_id}, #{content})
    </insert>


    <select id="getComentByGameId" resultType="String">
        <![CDATA[
            select * from (
                select content from comments where game_id = #{gameId}
            ) where ROWNUM <= 1
        ]]>
    </select>

    <select id="getComentCountByGameId" resultType="Long">
        select count(*) from comments where game_id = #{gameId}
    </select>


    <select id="getAllCommentByGameId">
        select c.*, u.nickname from comments c
        join users u on u.user_id = c.user_id where game_id = #{gameId}
    </select>


</mapper>